{
    "ConnectionStrings": {
        "SqlServerConnectionString": "Data Source=(localdb)\\mssqllocaldb; Initial Catalog=SRAAIDb;Integrated Security=true;Application Name=SRAAI;TrustServerCertificate=True;",
        "ConnectionStrings_Comment": "The ConnectionStrings section contains database connection strings used by the application."
    },


    "AI": {
        "ChatOptions": {
            "Temperature": 0
        },
        "ChatOptions_Comment": "Configures Temperature, TopP, TopK and the rest of the properties of Microsoft.Extensions.AI.ChatOptions",
        "OpenAI": {
            "ChatModel": "gpt-4.1-mini",
            "ChatApiKey": null,
            "ChatApiKey_Comment": "Get one at https://github.com/settings/personal-access-tokens/new More info at https://github.com/marketplace/models",
            "ChatEndpoint": "https://models.inference.ai.azure.com",
            "EmbeddingModel": "text-embedding-3-small",
            "EmbeddingApiKey": null,
            "EmbeddingApiKey_Comment": "Get one at https://github.com/settings/personal-access-tokens/new More info at https://github.com/marketplace/models",
            "EmbeddingEndpoint": "https://models.inference.ai.azure.com"
        },
        "AzureOpenAI": {
            "ChatModel": "gpt-4.1-mini",
            "ChatApiKey": null,
            "ChatApiKey_Comment": "Get one at https://portal.azure.com",
            "ChatEndpoint": "https://yourResourceName.openai.azure.com/openai/deployments/yourDeployment",
            "EmbeddingModel": "text-embedding-3-small",
            "EmbeddingApiKey": null,
            "EmbeddingApiKey_Comment": "Get one at https://portal.azure.com",
            "EmbeddingEndpoint": "https://yourResourceName.openai.azure.com/openai/deployments/yourDeployment"
        },
        "DataProtectionCertificatePassword": "StrongPassword@123",
        "DataProtectionCertificatePassword_Comment": "It can also be configured using: dotnet user-secrets set 'DataProtectionCertificatePassword' '@nyPassw0rd'",
        "Azure": {
            "SignalR": {
                "ConnectionString": null
            }
        }
    },
    "Identity": {
        "JwtIssuerSigningKeySecret": "0a795fba-ab7a-4ef4-bb6d-43928d11ae00c6578773-794c-4f3c-97d3-ed035252d4bc8e755477-bf25-44f3-b3a0-74e9db931651d948a215-2cd1-49ab-af69-3727085c3dcc",
        "Issuer": "SRAAI",
        "Audience": "SRAAI",
        "BearerTokenExpiration": "0.00:05:00",
        "BearerTokenExpiration_Comment": "BearerTokenExpiration used as JWT's expiration claim, access token's expires in and cookie's max age. Format: D.HH:mm:ss",
        "RefreshTokenExpiration": "14.00:00:00",
        "EmailTokenLifetime": "0.00:02:00",
        "PhoneNumberTokenLifetime": "0.00:02:00",
        "ResetPasswordTokenLifetime": "0.00:02:00",
        "TwoFactorTokenLifetime": "0.00:02:00",
        "OtpTokenLifetime": "0.00:02:00",
        "MaxPrivilegedSessionsCount": 3,
        "MaxPrivilegedSessionsCount_Comment": "Is the maximum number of concurrent privileged sessions a user can have.",
        "Password": {
            "RequireDigit": "false",
            "RequiredLength": "6",
            "RequireNonAlphanumeric": "false",
            "RequireUppercase": "false",
            "RequireLowercase": "false"
        },
        "SignIn": {
            "RequireConfirmedAccount": true
        }
    },
    "Email": {
        "Host": "LocalFolder",
        "Host_Comment": "Local folder means storing emails as .eml file in App_Data/sent-emails folder (Recommended for testing purposes only) instead of sending them using smtp server.",
        "Port": "587",
        "DefaultFromEmail": "DoNotReply@bitplatform.dev",
        "UserName": null,
        "Password": null
    },
    "Email__Comment": "You can also use https://ethereal.email/create for testing purposes.",
    "Sms": {
        "FromPhoneNumber": null,
        "TwilioAccountSid": null,
        "TwilioAutoToken": null
    },
    "UserProfileImagesDir": "attachments/profiles/",
    "ProductImagesDir": "attachments/products/",
    "GoogleRecaptchaSecretKey": "6LcTKMwrAAAAANTIBuIIYc7GqNSYRcTQ2irY6-By",
    "GoogleRecaptchaSecretKey_Comment": "Create one at https://console.cloud.google.com/security/recaptcha/create for Web Application Type and use site key in Client.Core",
    "AdsPushVapid_Comment": "https://github.com/adessoTurkey-dotNET/AdsPush",
    //"AdsPushVapid": {
    //    "AdsPushVapid_Comment": "Web push's vapid. More info at https://tools.reactpwa.com/vapid",
    //    "Subject": "mailto:test@bitplatform.dev",
    //    "PublicKey_Comment": "Set public key in Client.Web's appsettings.json",
    //    "PrivateKey": "aae54fdc-9139-49c4-b171-9f7ec26f898b050c2d36-9882-4c5b-8f9a-f5963d4a0ae2"
    //},
    //    "AdsPushAPNS": {
    //        "P8PrivateKey": null,
    //        "P8PrivateKey_Comment": "p8 certificate string without -----BEGIN PRIVATE KEY----- and -----END PRIVATE KEY----- and replace new lines with space.",
    //        "P8PrivateKeyId": null,
    //        "P8PrivateKeyId_Comment": "10-digit p8 certificate id; often part of a downloadable certificate filename",
    //        "TeamId": null,
    //        "TeamId_Comment": "10-digit Apple team id shown on the Apple Developer Membership Page",
    //        "AppBundleIdentifier": null,
    //        "EnvironmentType": "Development",
    //        "EnvironmentType_Comment": "Apns Env one of Development or Production"
    //    },
    //    "AdsPushFirebase": {
    //        "AdsPushFirebase_Comment": "Filed names in service_account.json => project_id,private_key_id,private_key,client_email,client_id,client_x509_cert_url",
    //        "Type": "service_account",
    //        "AuthUri": "https://accounts.google.com/o/oauth2/auth",
    //        "TokenUri": "https://oauth2.googleapis.com/token",
    //        "AuthProviderX509CertUrl": "https://www.googleapis.com/oauth2/v1/certs",
    //        "ProjectId": null,
    //        "PrivateKeyId": null,
    //        "PrivateKey": null,
    //        "ClientEmail": null,
    //        "ClientId": null,
    //        "ClientX509CertUrl": null
    //    },
    "Hangfire": {
        "UseIsolatedStorage": false,
        "UseIsolatedStorage__Comment": "Useful for testing or in production when managing multiple codebases with a single database."
    },
    "Authentication": {
        "Google": {
            "Comment": "https://learn.microsoft.com/en-us/aspnet/core/security/authentication/social/google-logins",
            "ClientId": null,
            "ClientSecret": null
        },
        "GitHub": {
            "Comment": "https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers/blob/dev/docs/github.md",
            "ClientId": null,
            "ClientSecret": null
        },
        "Twitter": {
            "Comment": "https://learn.microsoft.com/en-us/aspnet/core/security/authentication/social/twitter-logins",
            "ConsumerKey": null,
            "ConsumerSecret": null
        },
        "Apple": {
            "Comment": "https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers/blob/dev/docs/sign-in-with-apple.md",
            "ClientId": null,
            "ClientId_Comment": "Your Service Id's Identifier such as com.adminpanel.bitplatform.dev",
            "KeyId": null,
            "TeamId": null
        },
        "Facebook": {
            "Comment": "https://learn.microsoft.com/en-us/aspnet/core/security/authentication/social/facebook-logins",
            "AppId": null,
            "AppSecret": null
        },
        "AzureAD": {
            "Instance": "https://login.microsoftonline.com/",
            "TenantId": null,
            "ClientId": null,
            "ClientSecret": null,
            "CallbackPath": "/signin-oidc"
        },
        "AzureAD_Comment": "Azure ADB2C/Azure Entra"
    },
    "AllowedHosts": "*",
    "TrustedOrigins": ["https://smartai.sra.gov.in"],
    "TrustedOrigins_Comment": "Lists the permitted origins for CORS requests, return URLs following social sign-in and email confirmation, etc., along with allowed origins for Web Auth.",
    "ForwardedHeaders": {
        "ForwardedHeaders": "All",
        "ForwardedHeaders_Comment": "These values apply only if your backend is hosted behind a CDN (such as `Cloudflare`).",
        "ForwardedHostHeaderName": "X-Forwarded-Host",
        "ForwardedHostHeaderName_Comment": "For Cloudflare, use X-Host instead of X-Forwarded-Host.",
        "KnownNetworks": [],
        "KnownProxies": [],
        "AllowedHosts": [ "*" ]
    },
    "Cloudflare": {
        "ApiToken": null,
        "ZoneId": null,
        "AdditionalDomains": [],
        "AdditionalDomains_Comment": "The ResponseCacheService clears the cache for the current domain by default. If multiple Cloudflare-hosted domains point to your backend, you will need to purge the cache for each of them individually."
    },
    "ResponseCaching": {
        "EnableOutputCaching": false,
        "EnableCdnEdgeCaching": false
    },
    "WebAppRender": {
        "BlazorMode": "BlazorServer",
        "BlazorMode_Comment": "BlazorServer, BlazorWebAssembly and BlazorAuto.",
        "PrerenderEnabled": false,
        "PrerenderEnabled_Comment": "for apps with Prerender enabled, follow the instructions in the Client.Web/wwwroot/service-worker.published.js file"
    },
    "ServerSideHttpClientBaseAddress": null,
    "ServerSideHttpClientBaseAddress_Comment": "Read ServerWebSettings.ServerSideHttpClientBaseAddress comments",
    "SupportedAppVersions": {
        "MinimumSupportedAndroidAppVersion": "1.0.0",
        "MinimumSupportedIosAppVersion": "1.0.0",
        "MinimumSupportedMacOSAppVersion": "1.0.0",
        "MinimumSupportedWindowsAppVersion": "1.0.0",
        "MinimumSupportedWebAppVersion": "1.0.0",
        "SupportedAppVersions__Comment": "Enabling `AutoReload` (Disabled by default) ensure the latest app version is always applied in Web & Windows apps. Refer to `Client.Web/Components/AppBswupProgressBar.razor`, `Client.Web/wwwroot/index.html` and `Client.Windows/appsettings.json` for details."
    },
    "$schema": "https://json.schemastore.org/appsettings.json"
}
