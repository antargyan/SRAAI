@attribute [Route(PageUrls.AbhayYojana)]
@attribute [Route("{culture?}" + PageUrls.AbhayYojana)]
@attribute [Authorize(Policy = AuthPolicies.PRIVILEGED_ACCESS)]
@inherits AppPageBase

@using Bit.BlazorUI
@using System.Linq
@using System.IO
@using ClosedXML.Excel
@using Microsoft.AspNetCore.Components
@using Microsoft.JSInterop
@using SRAAI.Shared.Dtos.AbhayYojana

<AppPageData Title="SmartAI"
             PageTitle="SmartAI"/>

<!-- Enhanced CSS Libraries -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" rel="stylesheet">

<div class="main-container">
    <!-- Hero Section with Gradient Background -->
    <div class="hero-section">
        <div class="container-fluid">
            <div class="row align-items-center">
                <div class="col-lg-8">
                    <div class="hero-content">
                       @*  <div class="hero-badge animate__animated animate__fadeInDown">
                            <i class="fas fa-shield-alt me-2"></i>
                            Government Housing Scheme
                        </div> *@
                        <h1 class="hero-title animate__animated animate__fadeInUp animate__delay-1s">
                            <img src="_content/SRAAI.Client.Core/images/smartaiweb.png"
                                 alt="SmartaI Logo" class="hero-logo" />
                                 <span class="text-gradient"></span>
                        </h1>
                        <p class="hero-description animate__animated animate__fadeInUp animate__delay-2s">
                            An AI-enabled Excel sheet comparison system automatically detects, updates, and summarizes differences between sheets in Marathi Unicode text using fuzzy matching and natural-language insights—while ensuring accurate updates with minimal manual effort
                        </p>
                        <div class="hero-stats animate__animated animate__fadeInUp animate__delay-3s">
                            <div class="stat-item">
                                <div class="stat-number">@(applications?.Count() ?? 0)</div>
                                <div class="stat-label">Total Applicants</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-number">@(applications?.Count(a => a.EligibilityStatus?.Contains("पात्र") == true) ?? 0)</div>
                                <div class="stat-label">Eligible</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-number">@(applications?.Count(a => a.EligibilityStatus?.Contains("अपात्र") == true) ?? 0)</div>
                                <div class="stat-label">Ineligible</div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="hero-illustration animate__animated animate__fadeInRight animate__delay-2s">
                        <div class="floating-card">
                            <i class="fas fa-file-excel"></i>
                        </div>
                        <div class="floating-card delay-1">
                            <i class="fas fa-chart-line"></i>
                        </div>
                        <div class="floating-card delay-2">
                            <i class="fas fa-users"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Action Tools Section -->
    <div class="container-fluid py-5">
        <div class="card shadow p-4 text-center">
            <h6 class="text-primary fw-bold mb-3">
                NOTE : Please Follow these instructions for uploading Excel
            </h6>
            <ol class="text-start mb-4">
                <li>The AI application only supports excel sheet with <b>UNICODE supported language fonts</b></li>
                <li><b>Before uploading please download the sample file</b></li>
            </ol>

            <i class="fas fa-file-download fa-2x text-info mb-2"></i>
            <h5 class="card-title">Download Sample</h5>
            <p class="card-text">Get Excel template with sample data</p>
            <button type="button" class="btn btn-success px-4" @onclick="DownloadSampleExcel"
                    disabled="@(CurrentStep != BuilderStep.None && CurrentStep != BuilderStep.ImportAddendum)">
                <i class="fas fa-file-download me-2"></i> Download File
            </button>
        </div>



        <div class="row g-4">
            <!-- Import Original Annexure -->
            <div class="col-lg-3 col-md-6">
                <div class="action-card import-card">
                    <div class="card-icon">
                        <i class="fas fa-upload"></i>
                    </div>
                    <h5 class="card-title">Import Original</h5>
                    <p class="card-description">Upload and process original Annexure-II Excel files</p>
                    <BitFileUpload @ref="fileUploadRef"
                                   AutoReset
                                   AutoUpload
                                   HideFileView
                                   Accept=".xlsx"
                                   MaxSize="1024 * 1024 * 50"
                                   UploadUrlProvider="GetUploadUrl"
                                   UploadRequestHttpHeadersProvider="GetUploadRequestHeaders"
                                   OnUploading="() => isBusy = true"
                                   OnUploadFailed="HandleUploadFailed"
                                   OnUploadComplete="HandleUploadComplete">
                        <LabelTemplate>
                            <button type="button" 
                                    class="btn-action btn-primary"
                                    disabled="@(CurrentStep != BuilderStep.DownloadSample || isBusy)"
                                    @onclick="() => fileUploadRef.Browse()">
                                <i class="fas fa-upload me-2"></i>
                                Choose File
                            </button>
                        </LabelTemplate>
                    </BitFileUpload>
                </div>
            </div>

           
            <!-- Import Addendum -->
            <div class="col-lg-3 col-md-6">
                <div class="action-card update-card">
                    <div class="card-icon">
                        <i class="fas fa-file-import"></i>
                    </div>
                    <h5 class="card-title">Import Addendum</h5>
                    <p class="card-description">Update existing records with addendum files</p>
                    <BitFileUpload @ref="fileUpdateRef"
                                   AutoReset
                                   AutoUpload
                                   HideFileView
                                   Accept=".xlsx"
                                   MaxSize="1024 * 1024 * 50"
                                   UploadUrlProvider="GetUpdateUploadUrl"
                                   UploadRequestHttpHeadersProvider="GetUpdateUploadRequestHeaders"
                                   OnUploading="() => isBusy = true"
                                   OnUploadFailed="HandleUploadFailed"
                                   OnUploadComplete="HandleUploadUpdateComplete">
                        <LabelTemplate>
                            <button type="button" 
                                    class="btn-action btn-success"
                                    disabled="@(CurrentStep != BuilderStep.ImportOriginal || isBusy)"
                                    @onclick="() => fileUpdateRef.Browse()">
                                <i class="fas fa-file-import me-2"></i>
                                Choose File
                            </button>
                        </LabelTemplate>
                    </BitFileUpload>
                </div>
            </div>

            <!-- View Results -->
            <div class="col-lg-3 col-md-6">
                <div class="action-card analytics-card">
                    <div class="card-icon">
                        <i class="fas fa-chart-bar"></i>
                    </div>
                    <h5 class="card-title">View Analytics</h5>
                    <p class="card-description">Access detailed reports and statistics</p>
                    <button type="button"
                            class="btn-action btn-info w-100"
                            @onclick="GoToSummary" >
                        <i class="fas fa-chart-bar me-2"></i>
                        View Results
                    </button>
                </div>
            </div>

            <!-- Export Latest Annexure -->
            <div class="col-lg-3 col-md-6">
                <div class="action-card export-card">
                    <div class="card-icon">
                        <i class="fas fa-download"></i>
                    </div>
                    <h5 class="card-title">Export Data</h5>
                    <p class="card-description">Generate and download formatted Excel reports</p>
                    <button type="button"
                            class="btn-action btn-warning w-100"
                            @onclick="ExportToExcel">
                        <i class="fas fa-download me-2"></i>
                        Export Excel
                    </button>
                </div>
            </div>


           
          
        </div>
    </div>

    <!-- Data Table Section -->
    <div class="container-fluid pb-5">
        <div class="row">
            <div class="col-12">
                <div class="data-section">
                    <div class="section-header">
                        <h3 class="section-title">
                            <i class="fas fa-table me-3"></i>
                            Applications Data
                        </h3>
                        @if (applications is not null && applications.Any())
                        {
                            <div class="last-update">
                                <i class="fas fa-history me-2 text-primary"></i>
                                <h6>Last Update:
                                <strong>
                                    @{
                                        var lastUpdate = applications
                                        .Where(a => a.UpdatedDate.HasValue)
                                        .OrderByDescending(a => a.UpdatedDate.Value)
                                        .Select(a => a.UpdatedDate.Value)
                                        .FirstOrDefault();

                                        if (lastUpdate != default)
                                        {
                                            @lastUpdate.ToString("dd/MM/yyyy hh:mm:ss tt")
                                        }
                                        else
                                        {
                                            <text>No updates yet</text>
                                        }
                                    }
                                </strong></h6>
                            </div>
                        }
                        <div class="section-actions">
                            <div class="search-box">
                                <i class="fas fa-search"></i>
                                <input type="text" placeholder="Search applications..." class="search-input">
                            </div>
                        </div>
                    </div>

                    <div class="data-container">
                        @if (isLoadingApplications)
                        {
                            <div class="loading-state">
                                <div class="loading-spinner">
                                    <div class="spinner"></div>
                                </div>
                                <h4>Loading Applications</h4>
                                <p>Please wait while we fetch your data...</p>
                            </div>
                        }
                        else if (applications is not null && applications.Any())
                        {
                            <div class="table-container">
                                <table class="data-table">
                                    <thead>
                                        <tr>
                                            <th>SR No.</th>
                                            <th>Slum Number</th>
                                            <th>Original Dweller</th>
                                            <th>Applicant Name</th>
                                            <th>Voter Details</th>
                                            <th>Slum Usage</th>
                                            <th>Area (Sq Ft)</th>
                                            <th>Evidence</th>
                                            <th>Eligibility</th>
                                            <th>InsertDate</th>
                                            <th>UpdateDate</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var a in applications)
                                        {
                                            <tr class="data-row">
                                                <td>
                                                    <span class="badge badge-secondary">@a.SerialNumber</span>
                                                </td>
                                                <td>
                                                    <div class="primary-info">@a.OriginalSlumNumber</div>
                                                </td>
                                                <td>
                                                    <div class="name-info">@a.OriginalSlumDwellerName</div>
                                                </td>
                                                <td>
                                                    <div class="name-info">@a.ApplicantName</div>
                                                </td>
                                                <td>
                                                    <div class="voter-info">
                                                        <div>Year: @a.VoterListYear</div>
                                                        <div>Part: @a.VoterListPartNumber</div>
                                                        <div>Serial: @a.VoterListSerialNumber</div>
                                                    </div>
                                                </td>
                                                <td>
                                                    <span class="badge badge-info">@a.SlumUsage</span>
                                                </td>
                                                <td>
                                                    <div class="area-info">@a.CarpetAreaSqFt</div>
                                                </td>
                                                <td>
                                                    <div class="evidence-info" title="@a.EvidenceDetails">
                                                        @(a.EvidenceDetails?.Length > 50 ? a.EvidenceDetails.Substring(0, 50) + "..." : a.EvidenceDetails)
                                                    </div>
                                                </td>
                                                <td>
                                                    @if (a.EligibilityStatus?.Contains("पात्र") == true)
                                                    {
                                                        <span class="badge badge-success">
                                                            <i class="fas fa-check-circle me-1"></i>
                                                            @a.EligibilityStatus
                                                        </span>
                                                    }
                                                    else if (a.EligibilityStatus?.Contains("अपात्र") == true)
                                                    {
                                                        <span class="badge badge-danger">
                                                            <i class="fas fa-times-circle me-1"></i>
                                                            @a.EligibilityStatus
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-warning">
                                                            <i class="fas fa-clock me-1"></i>
                                                            @a.EligibilityStatus
                                                        </span>
                                                    }
                                                </td>
                                                <td>
                                                    <div class="date-info">
                                                        <div class="date-item">
                                                            <i class="fas fa-plus-circle text-success me-1"></i>
                                                            @a.CreatedDate.ToString("dd/MM/yyyy")
                                                        </div>
                                                        
                                                    </div>
                                                </td>
                                                <td>
                                                    @if (a.UpdatedDate.HasValue)
                                                    {
                                                        <div class="date-item">
                                                            <i class="fas fa-edit text-info me-1"></i>
                                                            @a.UpdatedDate.Value.ToString("dd/MM/yyyy")
                                                        </div>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="empty-state">
                                <div class="empty-icon">
                                    <i class="fas fa-file-excel"></i>
                                </div>
                                <h4>No Applications Found</h4>
                                <p>Import an Excel file to get started with data management</p>
                                <button class="btn-action btn-primary" @onclick="() => fileUploadRef.Browse()">
                                    <i class="fas fa-upload me-2"></i>
                                    Import Your First File
                                </button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Enhanced JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>

<script>
    function downloadFile(fileName, contentType, base64Data) {
        const link = document.createElement("a");
        link.href = "data:" + contentType + ";base64," + base64Data;
        link.download = fileName;
        link.click();
    }

    // Enhanced animations
    document.addEventListener('DOMContentLoaded', function() {
        // Animate cards on scroll
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('animate__animated', 'animate__fadeInUp');
                }
            });
        }, observerOptions);

        document.querySelectorAll('.action-card, .data-section').forEach(el => {
            observer.observe(el);
        });
    });
</script>

<style>
    :root {
        /* Professional Government Color Palette */
        --primary-gradient: linear-gradient(135deg, #1e3a8a 0%, #1e40af 100%);
        --success-gradient: linear-gradient(135deg, #059669 0%, #10b981 100%);
        --warning-gradient: linear-gradient(135deg, #d97706 0%, #f59e0b 100%);
        --info-gradient: linear-gradient(135deg, #0ea5e9 0%, #3b82f6 100%);
        --danger-gradient: linear-gradient(135deg, #dc2626 0%, #ef4444 100%);
        --dark-gradient: linear-gradient(135deg, #1f2937 0%, #374151 100%);
        --light-bg: #f8fafc;
        --card-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        --border-radius: 12px;
        
        /* Professional Color Variables */
        --primary-color: #1e40af;
        --primary-light: #3b82f6;
        --primary-dark: #1e3a8a;
        --success-color: #059669;
        --warning-color: #d97706;
        --danger-color: #dc2626;
        --info-color: #0ea5e9;
        --text-primary: #1f2937;
        --text-secondary: #6b7280;
        --text-muted: #9ca3af;
        --border-color: #e5e7eb;
        --background-light: #f9fafb;
        --background-white: #ffffff;
    }

    * {
        font-family: 'Inter', sans-serif;
    }

    .main-container {
        background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
        min-height: 100vh;
    }

    /* Hero Section */
    .hero-section {
        background: var(--primary-gradient);
        padding: 80px 0;
        position: relative;
        overflow: hidden;
        text-align: center;
    }

    .hero-section::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 100" fill="rgba(255,255,255,0.1)"><polygon points="0,0 1000,100 1000,0"/></svg>');
        background-size: cover;
    }

    .hero-badge {
        display: inline-block;
        background: rgba(255,255,255,0.2);
        color: white;
        padding: 8px 20px;
        border-radius: 50px;
        font-size: 14px;
        font-weight: 500;
        margin-bottom: 20px;
        backdrop-filter: blur(10px);
    }

    .hero-title {
        font-size: 3.5rem;
        font-weight: 700;
        color: white;
        margin-bottom: 20px;
        line-height: 1.2;
    }

    .text-gradient {
        background: linear-gradient(45deg, #fbbf24, #f59e0b);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .hero-description {
        font-size: 1.2rem;
        color: rgba(255,255,255,0.9);
        margin-bottom: 40px;
        line-height: 1.6;
    }

    .hero-stats {
        display: flex;
        gap: 40px;
        flex-wrap: wrap;
    }

    .stat-item {
        text-align: center;
    }

    .stat-number {
        font-size: 2.5rem;
        font-weight: 700;
        color: white;
        margin-bottom: 5px;
    }

    .stat-label {
        font-size: 14px;
        color: rgba(255,255,255,0.8);
        font-weight: 500;
    }

    .hero-illustration {
        position: relative;
        height: 300px;
    }

    .floating-card {
        position: absolute;
        width: 80px;
        height: 80px;
        background: rgba(255,255,255,0.2);
        border-radius: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2rem;
        color: white;
        backdrop-filter: blur(10px);
        animation: float 6s ease-in-out infinite;
    }

    .floating-card:nth-child(1) {
        top: 20px;
        right: 20px;
    }

    .floating-card:nth-child(2) {
        top: 120px;
        right: 100px;
        animation-delay: -2s;
    }

    .floating-card:nth-child(3) {
        bottom: 20px;
        right: 50px;
        animation-delay: -4s;
    }

    keyframes float {
        0%, 100% { transform: translateY(0px); }
        50% { transform: translateY(-20px); }
    }

    /* Action Cards */
    .action-card {
        background: var(--background-white);
        border-radius: var(--border-radius);
        padding: 30px;
        text-align: center;
        box-shadow: var(--card-shadow);
        transition: all 0.3s ease;
        border: 1px solid var(--border-color);
        height: 100%;
    }

    .action-card:hover {
        transform: translateY(-10px);
        box-shadow: 0 20px 40px rgba(0,0,0,0.15);
    }

    .import-card .card-icon {
        background: var(--primary-gradient);
    }

    .export-card .card-icon {
        background: var(--warning-gradient);
    }

    .update-card .card-icon {
        background: var(--success-gradient);
    }

    .analytics-card .card-icon {
        background: var(--info-gradient);
    }

    .sample-card .card-icon {
        background: var(--dark-gradient);
    }

    .card-icon {
        width: 80px;
        height: 80px;
        border-radius: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 20px;
        font-size: 2rem;
        color: white;
    }

    .card-title {
        font-size: 1.3rem;
        font-weight: 600;
        color: var(--text-primary);
        margin-bottom: 15px;
    }

    .card-description {
        color: var(--text-secondary);
        margin-bottom: 25px;
        line-height: 1.5;
    }

    .btn-action {
        padding: 12px 24px;
        border-radius: 12px;
        font-weight: 600;
        border: none;

        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        min-width: 140px;
    }

        .btn-action:disabled {
        opacity: 0.6;
        cursor: not-allowed;
        pointer-events: none;
        transform: none !important;
    }
    .btn-primary {
        background: var(--primary-gradient);
        color: white;
    }

    .btn-warning {
        background: var(--warning-gradient);
        color: white;
    }

    .btn-success {
        background: var(--success-gradient);
        color: white;
    }

    .btn-info {
        background: var(--info-gradient);
        color: white;
    }

    .btn-action:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(0,0,0,0.2);
        color: white;
    }

    /* Data Section */
    .data-section {
        background: var(--background-white);
        border-radius: var(--border-radius);
        box-shadow: var(--card-shadow);
        overflow: hidden;
        border: 1px solid var(--border-color);
    }

    .section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 30px;
        background: linear-gradient(135deg, var(--background-light) 0%, #f1f5f9 100%);
        border-bottom: 1px solid var(--border-color);
    }

    .section-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--text-primary);
        margin: 0;
    }

    .search-box {
        position: relative;
        width: 300px;
    }

    .search-box i {
        position: absolute;
        left: 15px;
        top: 50%;
        transform: translateY(-50%);
        color: var(--text-muted);
    }

    .search-input {
        width: 100%;
        padding: 12px 15px 12px 45px;
        border: 2px solid var(--border-color);
        border-radius: 12px;
        font-size: 14px;
        transition: all 0.3s ease;
        background: var(--background-white);
    }

    .search-input:focus {
        outline: none;
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px rgba(30, 64, 175, 0.1);
    }

    /* Data Table */
    .data-container {
        padding: 0;
    }

    .table-container {
        overflow-x: auto;
    }

    .data-table {
        width: 100%;
        border-collapse: collapse;
        font-size: 14px;
    }

    .data-table thead th {
        background: var(--primary-gradient);
        color: white;
        padding: 20px 15px;
        font-weight: 600;
        text-align: left;
        border: none;
        position: sticky;
        top: 0;
        z-index: 10;
    }

    .data-table tbody tr {
        border-bottom: 1px solid var(--border-color);
        transition: all 0.3s ease;
    }

    .data-table tbody tr:hover {
        background: linear-gradient(135deg, var(--background-light) 0%, #f1f5f9 100%);
        transform: scale(1.01);
    }

    .data-table tbody td {
        padding: 20px 15px;
        vertical-align: middle;
    }

    .badge {
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .badge-secondary {
        background: var(--dark-gradient);
        color: white;
    }

    .badge-success {
        background: var(--success-gradient);
        color: white;
    }

    .badge-danger {
        background: var(--danger-gradient);
        color: white;
    }

    .badge-warning {
        background: var(--warning-gradient);
        color: white;
    }

    .badge-info {
        background: var(--info-gradient);
        color: white;
    }

    .badge-primary {
        background: var(--primary-gradient);
        color: white;
    }

    .primary-info {
        font-weight: 600;
        color: var(--text-primary);
        font-size: 16px;
    }

    .name-info {
        font-weight: 500;
        color: var(--text-primary);
        max-width: 150px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .voter-info {
        font-size: 12px;
        color: var(--text-secondary);
        line-height: 1.4;
    }

    .area-info {
        font-weight: 600;
        color: var(--success-color);
    }

    .evidence-info {
        max-width: 200px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        color: var(--text-primary);
        font-size: 13px;
    }

    .date-info {
        font-size: 12px;
        line-height: 1.4;
    }

    .date-item {
        display: flex;
        align-items: center;
        margin-bottom: 2px;
    }

    /* Loading State */
    .loading-state {
        text-align: center;
        padding: 80px 20px;
    }

    .loading-spinner {
        margin-bottom: 30px;
    }

    .spinner {
        width: 60px;
        height: 60px;
        border: 4px solid var(--border-color);
        border-top: 4px solid var(--primary-color);
        border-radius: 50%;
        animation: spin 1s linear infinite;
        margin: 0 auto;
    }

    keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 80px 20px;
    }

    .empty-icon {
        font-size: 4rem;
        color: var(--text-muted);
        margin-bottom: 30px;
    }

    .empty-state h4 {
        color: var(--text-primary);
        margin-bottom: 15px;
    }

    .empty-state p {
        color: var(--text-secondary);
        margin-bottom: 30px;
    }

    /* Responsive Design */
    media (max-width: 768px) {
        .hero-title {
            font-size: 2.5rem;
        }
        
        .hero-stats {
            gap: 20px;
        }
        
        .section-header {
            flex-direction: column;
            gap: 20px;
        }
        
        .search-box {
            width: 100%;
        }
        
        .data-table {
            font-size: 12px;
        }
        
        .data-table thead th,
        .data-table tbody td {
            padding: 10px 8px;
        }
    }

    /* Animation Classes */
    .animate__animated {
        animation-duration: 1s;
        animation-fill-mode: both;
    }

    .animate__fadeInUp {
        animation-name: fadeInUp;
    }

    keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translate3d(0, 40px, 0);
        }
        to {
            opacity: 1;
            transform: translate3d(0, 0, 0);
        }
    }

    .last-update {
        font-size: 14px;
        color: var(--text-secondary);
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 6px;
    }

    .hero-logo {
        max-width: 300px;
        margin-bottom: 1rem;
    }
</style>
